{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "afd_profile_id": {
            "type": "string",
            "metadata": {
                "description": "The ID of the Azure Front Door profile"
            }
        },
        "afd_endpoint_id": {
            "type": "string",
            "metadata": {
                "description": "The ID of the Azure Front Door endpoint"
            }
        },
        "selected_ruleset_id": {
            "type": "string",
            "defaultValue": "---",
            "metadata": {
                "description": "The ID of the ruleset to apply to all routes if associationType is All"
            }
        },
        "selected_routes": {
            "type": "array",
            "metadata": {
                "description": "The list of routes to apply the ruleset to"
            }
        },
        "route_originGroups": {
            "type": "array",
            "metadata": {
                "description": "The list of origin groups for the routes"
            }
        },
        "route_customDomains": {
            "type": "array",
            "metadata": {
                "description": "The list of custom domains for the routes"
            }
        },
        "route_patterns": { "type": "array" },
        "route_protocols": { "type": "array" },
        "route_httpsRedirect": { "type": "array" },
        "route_forwardingProto": { "type": "array" },
        "route_enabledState": { "type": "array" },
        "route_cacheConfig": { "type": "array" },
        "all_route_ids": {
            "type": "array",
            "metadata": {
                "description": "IDs of all routes (index aligns with originGroups / customDomains)"
            }
        }
    },
    "variables": {
        "afd_profile_name": "[last(split(parameters('afd_profile_id'), '/'))]",
        "afd_endpoint_name": "[last(split(parameters('afd_endpoint_id'), '/'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Cdn/profiles/afdendpoints",
            "apiVersion": "2024-09-01",
            "name": "[concat(variables('afd_profile_name'), '/', variables('afd_endpoint_name'))]",
            "location": "global"
        },
        {
            "type": "Microsoft.Cdn/profiles/afdendpoints/routes",
            "apiVersion": "2024-09-01",
            "name": "[concat(variables('afd_profile_name'), '/', variables('afd_endpoint_name'), '/', last(split(parameters('selected_routes')[copyIndex()], '/')))]",
            "copy": {
                "name": "routeAssociationLoop",
                "count": "[length(parameters('selected_routes'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/afdendpoints', variables('afd_profile_name'), variables('afd_endpoint_name'))]"
            ],

            "properties": {
                "originGroup": {
                    "id": "[parameters('route_originGroups')[indexOf(parameters('all_route_ids'), parameters('selected_routes')[copyIndex()])]]"
                },
                "customDomains": "[parameters('route_customDomains')[ indexOf(parameters('all_route_ids'), parameters('selected_routes')[copyIndex()])  ]]",
                "patternsToMatch": "[parameters('route_patterns')[ indexOf(parameters('all_route_ids'), parameters('selected_routes')[copyIndex()]) ]]",
                "supportedProtocols": "[parameters('route_protocols')[     indexOf(parameters('all_route_ids'), parameters('selected_routes')[copyIndex()]) ]]",
                "httpsRedirect": "[parameters('route_httpsRedirect')[ indexOf(parameters('all_route_ids'), parameters('selected_routes')[copyIndex()]) ]]",
                "forwardingProtocol": "[parameters('route_forwardingProto')[indexOf(parameters('all_route_ids'), parameters('selected_routes')[copyIndex()]) ]]",
                "enabledState": "[parameters('route_enabledState')[  indexOf(parameters('all_route_ids'), parameters('selected_routes')[copyIndex()]) ]]",

                "ruleSets": "[if(equals(parameters('selected_ruleset_id'), '---'), json('[]'), array(createObject('id', parameters('selected_ruleset_id'))))]"
            }
        }
    ]
}